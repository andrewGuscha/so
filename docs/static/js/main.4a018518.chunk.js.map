{"version":3,"sources":["pages/Search/SearchBox/SearchBox.module.css","pages/Search/Spinner/Spinner.module.css","pages/Search/SearchList/SearchList.module.css","pages/Search/SearchList/SearchItem/SearchItem.module.css","pages/Search/Search.module.css","http.js","pages/Search/duck/reducer.js","pages/Search/SearchBox/SearchBox.js","pages/Search/Spinner/Spinner.js","pages/Search/SearchList/SearchItem/SearchItem.js","pages/Search/SearchList/SearchList.js","pages/Search/Search.js","pages/Search/duck/actions.js","pages/Search/duck/types.js","pages/Search/duck/requests.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["module","exports","http","axios","create","baseURL","initialState","loaded","loading","items","error","SearchBox","handleChange","e","setState","search","target","value","onSearch","props","state","inputRef","createRef","this","current","focus","className","styles","container","type","input","onChange","ref","button","onClick","Component","Spinner","spinner","SearchItem","title","score","link","creation_date","tags","owner","profile_image","display_name","reputation","ownerLink","left","href","src","alt","image","right","unescape","meta","Date","toDateString","length","join","orderOptions","label","SearchList","getItems","sort","lowerSearch","toLowerCase","filter","includes","split","attr","order","orderBy","utils","map","key","placeholder","item","question_id","mapDispatchToProps","doSearch","dispatch","params","intitle","site","page","get","getSearchResults","then","data","payload","catch","response","connect","App","Boolean","window","location","hostname","match","combineReducers","action","store","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4a018518.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBox_container__3UJcH\",\"input\":\"SearchBox_input__R_YE9\",\"button\":\"SearchBox_button__gksRI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Spinner_container__2iv-K\",\"spinner\":\"Spinner_spinner__2qp89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchList_container__2aXgt\",\"utils\":\"SearchList_utils__1TS9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchItem_container__G3CjR\",\"left\":\"SearchItem_left__21YnF\",\"image\":\"SearchItem_image__2f4_g\",\"right\":\"SearchItem_right__2l87m\",\"title\":\"SearchItem_title__TQOvb\",\"meta\":\"SearchItem_meta__D-Kel\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__14q1E\"};","import axios from 'axios';\n\nexport const http = axios.create({\n  baseURL: 'https://api.stackexchange.com/2.2/',\n});","import { SEARCH_REQUEST, SEARCH_REQUEST_SUCCESS, SEARCH_REQUEST_FAIL } from './types';\n\nconst initialState = {\n  loaded: false,\n  loading: false,\n  items: [],\n  error: null,\n};\n\nexport const reducer = ( state = initialState, action ) => {\n  switch( action.type ) {\n    case SEARCH_REQUEST:\n      return { ...state, loading: true, loaded: false, items: [], error: null };\n    case SEARCH_REQUEST_SUCCESS:\n      return { ...state, loading: false, loaded: true, items: action.payload.items };\n    case SEARCH_REQUEST_FAIL:\n      return { ...state, loading: false, loaded: false, error: action.payload };\n    default: return state;\n  }\n};\n","import React, { Component, createRef } from 'react';\n\nimport styles from './SearchBox.module.css';\n\nexport class SearchBox extends Component {\n  constructor() {\n    super();\n    this.inputRef = createRef();\n    this.state = { search: '' };\n  }\n\n  componentDidMount() {\n    this.inputRef.current.focus();\n  }\n\n  handleChange = e => this.setState({ search: e.target.value });\n\n  onSearch = () => {\n    const { onSearch } = this.props;\n    const { search } = this.state;\n    return onSearch(search);\n  };\n\n  render() {\n    const { search } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <input\n          type=\"search\"\n          className={styles.input}\n          value={search}\n          onChange={this.handleChange}\n          ref={this.inputRef}\n        />\n        <button\n          className={styles.button}\n          onClick={this.onSearch}\n        >\n          Search\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport styles from './Spinner.module.css';\n\nexport const Spinner = () => (\n  <div className={styles.container}>\n    <div className={styles.spinner} />\n  </div>\n);","import React from 'react';\nimport { unescape } from 'lodash'\n\nimport styles from './SearchItem.module.css';\n\nexport const SearchItem = props => {\n  const {\n    title,\n    score,\n    link,\n    creation_date,\n    tags,\n    owner: { profile_image, display_name, reputation, link: ownerLink }\n  } = props;\n  return (\n    <div className={styles.container}>\n      <div className={styles.left}>\n        {profile_image &&  (\n          <a href={ownerLink}>\n            <img src={profile_image} alt={display_name} className={styles.image} />\n          </a>\n        )}\n      </div>\n      <div className={styles.right}>\n        <h3 className={styles.title}>\n          {unescape(title)}\n          <span> | Score {score}</span>\n        </h3>\n        <div className={styles.meta}>\n          <span>{new Date(creation_date*1000).toDateString()}</span>\n          <span>Reputation: {reputation}</span>\n          <span>{display_name}</span>\n        </div>\n        <div>Link to owner: {ownerLink}</div>\n        <div>Link to question: {link}</div>\n        {tags.length && (\n          <div className={styles.tags}>\n            {'Tags: '}\n            {tags.join(', ')}\n          </div>\n        )}\n      </div>\n    </div>\n  )\n};\n","import React, { Component } from 'react';\nimport { orderBy } from 'lodash';\n\nimport { SearchItem } from './SearchItem';\nimport styles from './SearchList.module.css';\n\nconst orderOptions = [\n  { label: 'View count descending', value: 'view_count:desc' },\n  { label: 'View count ascending', value: 'view_count:asc' },\n  { label: 'Creation date descending', value: 'creation_date:desc' },\n  { label: 'Creation date ascending', value: 'creation_date:asc' }\n]\n\nexport class SearchList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: '',\n      sort: '',\n    };\n  }\n\n  handleChange = type => e => this.setState({ [type]: e.target.value });\n\n  getItems = () => {\n    const { search, sort } = this.state;\n    const lowerSearch = search.toLowerCase();\n    let { items } = this.props;\n    if (search) {\n      items = items.filter(({ title }) => title.toLowerCase().includes(lowerSearch));\n    }\n    if (sort) {\n      const [attr, order] = sort.split(':');\n      items = orderBy(items, [attr], [order]);\n    }\n\n    return items;\n  };\n\n  render() {\n    const { search, sort } = this.state;\n    const items = this.getItems();\n\n    return (\n      <div className={styles.container}>\n        <div className={styles.utils}>\n          <select value={sort} onChange={this.handleChange('sort')}>\n            <option>Choose a sort order</option>\n            {orderOptions.map(({ label, value }) => <option value={value} key={value}>{label}</option>)}\n          </select>\n          <input\n            type=\"search\"\n            value={search}\n            onChange={this.handleChange('search')}\n            placeholder=\"Type text to filter\"\n          />\n        </div>\n        {items.map(item => <SearchItem {...item} key={item.question_id} />)}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { SearchBox } from './SearchBox';\nimport { Spinner } from './Spinner';\nimport { SearchList } from './SearchList';\nimport { doSearch } from './duck';\n\nimport styles from './Search.module.css';\n\nexport const Search = props => {\n  const { loading, loaded, items, doSearch } = props;\n  return (\n    <div className={styles.container}>\n      <SearchBox onSearch={doSearch} />\n      {loading && <Spinner />}\n      {loaded && <SearchList items={items} />}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => state.search;\nconst mapDispatchToProps = { doSearch };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import { SEARCH_REQUEST, SEARCH_REQUEST_SUCCESS, SEARCH_REQUEST_FAIL } from './types';\nimport { getSearchResults } from './requests';\n\nexport const doSearch = search => dispatch => {\n  dispatch({ type: SEARCH_REQUEST });\n\n  return getSearchResults(search)\n    .then(({ data }) => dispatch({ type: SEARCH_REQUEST_SUCCESS, payload: data }))\n    .catch(({ response }) => dispatch({ type: SEARCH_REQUEST_FAIL, payload: response.data }));\n};\n","export const SEARCH_REQUEST = 'SEARCH_REQUEST';\nexport const SEARCH_REQUEST_SUCCESS = 'SEARCH_REQUEST_SUCCESS';\nexport const SEARCH_REQUEST_FAIL = 'SEARCH_REQUEST_FAIL';","import { http } from '../../../http';\n\nexport const getSearchResults = search => {\n  const params = {\n    intitle: search,\n    site: 'stackoverflow',\n    page: 1,\n    order: 'desc',\n    sort: 'votes',\n    filter: 'default'\n  };\n  return http.get('search', { params });\n};\n","import React from 'react';\n\nimport { Search } from './pages';\n\nfunction App() {\n  return (\n    <div>\n      <Search />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport { reducer as search } from './pages'\n\nexport default combineReducers({ search });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './reducer';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n  )\n);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}